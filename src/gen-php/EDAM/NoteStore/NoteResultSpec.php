<?php
namespace EDAM\NoteStore;

/**
 * Autogenerated by Thrift Compiler (0.21.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * This structure is provided to the getNoteWithResultSpec function to specify the subset of
 * fields that should be included in the Note that is returned. This allows clients to request
 * the minimum set of information that they require when retrieving a note, reducing the size
 * of the response and improving the response time.
 * 
 * If one of the fields in this spec is not set, then it will be treated as 'false' by the service,
 * so that the default behavior is to include none of the fields below in the Note.
 * 
 * <dl>
 *   <dt>includeContent</dt>
 *   <dd>If true, the Note.content field will be populated with the note's ENML contents.</dd>
 * 
 *   <dt>includeResourcesData</dt>
 *   <dd>If true, any Resource elements will include the binary contents of their 'data' field's
 *     body.</dd>
 * 
 *   <dt>includeResourcesRecognition</dt>
 *   <dd>If true, any Resource elements will include the binary contents of their 'recognition'
 *     field's body if recognition data is available.</dd>
 * 
 *   <dt>includeResourcesAlternateData</dt>
 *   <dd>If true, any Resource elements will include the binary contents of their 'alternateData'
 *     field's body, if an alternate form is available.</dd>
 * 
 *   <dt>includeSharedNotes</dt>
 *   <dd>If true, the Note.sharedNotes field will be populated with the note's shares.</dd>
 * 
 *   <dt>includeNoteAppDataValues</dt>
 *   <dd>If true, the Note.attributes.applicationData.fullMap field will be populated.</dd>
 * 
 *   <dt>includeResourceAppDataValues</dt>
 *   <dd>If true, the Note.resource.attributes.applicationData.fullMap field will be populated.</dd>
 * 
 *   <dt>includeAccountLimits</dt>
 *   <dd>If true, the Note.limits field will be populated with the note owner's account limits.</dd>
 * </dl>
 */
class NoteResultSpec
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'includeContent',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        2 => array(
            'var' => 'includeResourcesData',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        3 => array(
            'var' => 'includeResourcesRecognition',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        4 => array(
            'var' => 'includeResourcesAlternateData',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        5 => array(
            'var' => 'includeSharedNotes',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        6 => array(
            'var' => 'includeNoteAppDataValues',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        7 => array(
            'var' => 'includeResourceAppDataValues',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
        8 => array(
            'var' => 'includeAccountLimits',
            'isRequired' => false,
            'type' => TType::BOOL,
        ),
    );

    /**
     * @var bool
     */
    public $includeContent = null;
    /**
     * @var bool
     */
    public $includeResourcesData = null;
    /**
     * @var bool
     */
    public $includeResourcesRecognition = null;
    /**
     * @var bool
     */
    public $includeResourcesAlternateData = null;
    /**
     * @var bool
     */
    public $includeSharedNotes = null;
    /**
     * @var bool
     */
    public $includeNoteAppDataValues = null;
    /**
     * @var bool
     */
    public $includeResourceAppDataValues = null;
    /**
     * @var bool
     */
    public $includeAccountLimits = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['includeContent'])) {
                $this->includeContent = $vals['includeContent'];
            }
            if (isset($vals['includeResourcesData'])) {
                $this->includeResourcesData = $vals['includeResourcesData'];
            }
            if (isset($vals['includeResourcesRecognition'])) {
                $this->includeResourcesRecognition = $vals['includeResourcesRecognition'];
            }
            if (isset($vals['includeResourcesAlternateData'])) {
                $this->includeResourcesAlternateData = $vals['includeResourcesAlternateData'];
            }
            if (isset($vals['includeSharedNotes'])) {
                $this->includeSharedNotes = $vals['includeSharedNotes'];
            }
            if (isset($vals['includeNoteAppDataValues'])) {
                $this->includeNoteAppDataValues = $vals['includeNoteAppDataValues'];
            }
            if (isset($vals['includeResourceAppDataValues'])) {
                $this->includeResourceAppDataValues = $vals['includeResourceAppDataValues'];
            }
            if (isset($vals['includeAccountLimits'])) {
                $this->includeAccountLimits = $vals['includeAccountLimits'];
            }
        }
    }

    public function getName()
    {
        return 'NoteResultSpec';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeContent);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeResourcesData);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeResourcesRecognition);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeResourcesAlternateData);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeSharedNotes);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 6:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeNoteAppDataValues);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 7:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeResourceAppDataValues);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 8:
                    if ($ftype == TType::BOOL) {
                        $xfer += $input->readBool($this->includeAccountLimits);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('NoteResultSpec');
        if ($this->includeContent !== null) {
            $xfer += $output->writeFieldBegin('includeContent', TType::BOOL, 1);
            $xfer += $output->writeBool($this->includeContent);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeResourcesData !== null) {
            $xfer += $output->writeFieldBegin('includeResourcesData', TType::BOOL, 2);
            $xfer += $output->writeBool($this->includeResourcesData);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeResourcesRecognition !== null) {
            $xfer += $output->writeFieldBegin('includeResourcesRecognition', TType::BOOL, 3);
            $xfer += $output->writeBool($this->includeResourcesRecognition);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeResourcesAlternateData !== null) {
            $xfer += $output->writeFieldBegin('includeResourcesAlternateData', TType::BOOL, 4);
            $xfer += $output->writeBool($this->includeResourcesAlternateData);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeSharedNotes !== null) {
            $xfer += $output->writeFieldBegin('includeSharedNotes', TType::BOOL, 5);
            $xfer += $output->writeBool($this->includeSharedNotes);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeNoteAppDataValues !== null) {
            $xfer += $output->writeFieldBegin('includeNoteAppDataValues', TType::BOOL, 6);
            $xfer += $output->writeBool($this->includeNoteAppDataValues);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeResourceAppDataValues !== null) {
            $xfer += $output->writeFieldBegin('includeResourceAppDataValues', TType::BOOL, 7);
            $xfer += $output->writeBool($this->includeResourceAppDataValues);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->includeAccountLimits !== null) {
            $xfer += $output->writeFieldBegin('includeAccountLimits', TType::BOOL, 8);
            $xfer += $output->writeBool($this->includeAccountLimits);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
